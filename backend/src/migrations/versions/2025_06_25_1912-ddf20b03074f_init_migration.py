"""init_migration

Revision ID: ddf20b03074f
Revises: 
Create Date: 2025-06-25 19:12:41.622726

"""
from typing import Sequence, Union

from alembic import op
from fastapi_users_db_sqlalchemy.generics import TIMESTAMPAware
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ddf20b03074f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('access_tokens',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=43), nullable=False),
    sa.Column('created_at', TIMESTAMPAware(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_access_tokens_user_id_users'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('token', name=op.f('pk_access_tokens'))
    )
    op.create_index(op.f('ix_access_tokens_created_at'), 'access_tokens', ['created_at'], unique=False)
    op.create_table('collections',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('share_token', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_collections_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_collections')),
    sa.UniqueConstraint('share_token', name=op.f('uq_collections_share_token'))
    )
    op.create_table('items',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('year', sa.String(length=10), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('images', sa.Text(), nullable=True),
    sa.Column('material', sa.Enum('GOLD', 'SILVER', 'COPPER', 'BRONZE', 'NICKEL', 'ALUMINUM', 'BRASS', 'PLATINUM', 'STEEL', 'ZINC', 'TIN', 'LEAD', name='material'), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(as_uuid=False), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_items_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_items'))
    )
    op.create_table('collection_items',
    sa.Column('collection_id', sa.UUID(as_uuid=False), nullable=False),
    sa.Column('item_id', sa.UUID(as_uuid=False), nullable=False),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], name=op.f('fk_collection_items_collection_id_collections')),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], name=op.f('fk_collection_items_item_id_items')),
    sa.PrimaryKeyConstraint('collection_id', 'item_id', name=op.f('pk_collection_items'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('collection_items')
    op.drop_table('items')
    op.drop_table('collections')
    op.drop_index(op.f('ix_access_tokens_created_at'), table_name='access_tokens')
    op.drop_table('access_tokens')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
